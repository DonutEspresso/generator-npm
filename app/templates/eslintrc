{
    // eslint: recommended automatically enables most/all rules from the
    // possible errors section and more:
    // http://eslint.org/docs/rules/#possible-errors
    "extends": ["plugin:prettier/recommended"],
    "env": {
        "browser": false,
        "node": true,
        "es6": true
    },
    "plugins": ["prettier"],
    "rules": {
        "prettier/prettier": "error",

        // possible errors
        "no-cond-assign": ["error"],
        "no-constant-condition": ["error"],
        "no-control-regex": ["error"],
        "no-debugger": ["error"],
        "no-dupe-args": ["error"],
        "no-dupe-keys": ["error"],
        "no-duplicate-case": ["error"],
        "no-empty": ["error"],
        "no-empty-character-class": ["error"],
        "no-ex-assign": ["error"],
        "no-extra-boolean-cast": ["error"],
        "no-extra-semi": ["error"],
        "no-func-assign": ["error"],
        // this is for variable hoisting, not necessary if we use block scoped declarations
        // "no-inner-declarations": ["error", "both" ],
        "no-invalid-regexp": ["error"],
        "no-irregular-whitespace": ["error"],
        "no-reserved-keys": ["off"],
        "no-regex-spaces": ["error"],
        "no-sparse-arrays": ["error"],
        "no-unreachable": ["error"],
        "no-unsafe-negation": ["error"],
        "use-isnan": ["error"],
        "valid-jsdoc": ["error", {
            "requireReturnDescription": false
        }],
        "valid-typeof": ["error"],

        // best practices
        "array-callback-return": ["error"],
        "block-scoped-var": ["error"],
        "class-methods-use-this": ["error"],
        "complexity": ["warn"],
        "consistent-return": ["error"],
        "curly": ["error"],
        "default-case": ["error"],
        "dot-notation": ["error", { "allowKeywords": true } ],
        "eqeqeq": ["error"],
        "guard-for-in": ["error"],
        "no-alert": ["error"],
        "no-caller": ["error"],
        "no-case-declarations": ["error"],
        "no-div-regex": ["error"],
        "no-empty-function": ["error"],
        "no-empty-pattern": ["error"],
        "no-eq-null": ["error"],
        "no-eval": ["error"],
        "no-extend-native": ["error"],
        "no-extra-bind": ["error"],
        "no-extra-label": ["error"],
        "no-fallthrough": ["error"],
        "no-floating-decimal": ["error"],
        "no-global-assign": ["error"],
        "no-implicit-coercion": ["error"],
        "no-implied-eval": ["error"],
        "no-iterator": ["error"],
        "no-labels": ["error"],
        "no-lone-blocks": ["error"],
        "no-loop-func": ["error"],
        "no-magic-numbers": ["off"],
        "no-multi-spaces": ["off"],
        "no-new": ["error"],
        "no-new-func": ["error"],
        "no-new-wrappers": ["error"],
        "no-octal": ["error"],
        "no-octal-escape": ["error"],
        "no-param-reassign": ["error"],
        "no-proto": ["error"],
        "no-redeclare": ["error"],
        "no-return-assign": ["error"],
        "no-script-url": ["error"],
        "no-self-assign": ["error"],
        "no-self-compare": ["error"],
        "no-sequences": ["error"],
        "no-throw-literal": ["error"],
        "no-unmodified-loop-condition": ["error"],
        "no-unused-expressions": ["error"],
        "no-unused-labels": ["error"],
        "no-useless-call": ["error"],
        "no-useless-concat": ["error"],
        "no-void": ["error"],
        "no-warning-comments": ["warn"],
        "no-with": ["error"],
        "wrap-iife": ["error"],
        "yoda": ["error", "never" ],

        // strict mode
        "strict": ["error", "global" ],

        // variables
        "no-catch-shadow": ["error"],
        "no-delete-var": ["error"],
        "no-shadow": ["error"],
        "no-shadow-restricted-names": ["error"],
        "no-undef": ["error"],
        "no-undef-init": ["error"],
        "no-unused-vars": ["error", { "vars": "all", "args": "none" } ],
        "no-use-before-define": ["error", "nofunc" ],

        // node.js
        "callback-return": ["error", [ "callback", "cb", "cb1", "cb2", "cb3", "next", "innerCb", "done" ]],
        "global-require": ["error"],
        "handle-callback-err": ["error", "^.*(e|E)rr" ],
        "no-mixed-requires": ["error"],
        "no-new-require": ["error"],
        "no-path-concat": ["error"],
        "no-process-exit": ["error"],

        // stylistic
        "array-bracket-newline": ["error", "consistent" ],
        "array-bracket-spacing": ["error", "never" ],
        "block-spacing": ["error", "always" ],
        "camelcase": ["error", {
            "properties": "always"
        }],
        "comma-dangle": ["error", "never" ],
        "comma-spacing": ["error", { "before": false, "after": true }],
        "comma-style": ["error", "last" ],
        "computed-property-spacing": ["error", "never" ],
        "consistent-this": ["error", "self" ],
        "func-call-spacing": ["error", "never" ],
        "func-style": ["error", "declaration" ],
        "function-paren-newline": ["error", "consistent" ],
        "indent": ["error", 4, {
            "CallExpression": { "arguments": "off" }
        }],
        "key-spacing": ["error", {
            "beforeColon": false,
            "afterColon": true
        }],
        "keyword-spacing": ["error", {
            "before": true,
            "after": true
        }],
        "lines-between-class-members": ["error", "always" ],
        "max-len": ["error", {
            "code": 80,
            "ignoreUrls": true
        }],
        "multiline-ternary": ["error", "always-multiline" ],
        "new-cap": ["error", {
            "newIsCap": true,
            "properties": true
        }],
        "new-parens": ["error"],
        "no-array-constructor": ["error"],
        "no-mixed-operators": ["error"],
        "no-nested-ternary": ["error"],
        "no-new-object": ["error"],
        "no-trailing-spaces": ["error"],
        "no-unneeded-ternary": ["error"],
        "no-whitespace-before-property": ["error"],
        "object-curly-newline": ["error", { "consistent": true }],
        "object-curly-spacing": ["error", "always", {
            "arraysInObjects": false,
            "objectsInObjects": false
        }],
        "one-var-declaration-per-line": ["error"],
        "operator-linebreak": ["error", "after" ],
        "padding-line-between-statements": ["error",
            {
                "blankLine": "always",
                "prev": "directive",
                "next": "*"
            },
            {
                "blankLine": "any",
                "prev": "directive",
                "next": "directive"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "cjs-export"
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "export"
            },
            {
                "blankLine": "always",
                "prev": "block",
                "next": "*"
            }
        ],
        "quotes": ["error", "single", { "avoidEscape": true }],
        "require-jsdoc": ["error", {
            "require": {
                "FunctionDeclaration": true,
                "MethodDefinition": true,
                "ClassDeclaration": true,
                "ArrowFunctionExpression": false,
                "FunctionExpression": false
            }
        }],
        "semi": ["error", "always" ],
        "space-before-blocks": ["error", "always" ],
        "space-before-function-paren": ["error", "never" ],
        "space-in-parens": ["error", "never" ],
        "space-infix-ops": ["error"],
        "space-unary-ops": ["error", { "words": true, "nonwords": false }],
        "spaced-comment": ["error", "always", {
            "exceptions": ["-"]
        }],
        "switch-colon-spacing": ["error", { "after": true, "before": false }],
        "template-tag-spacing": ["error", "never" ],

        // es6
        "arrow-body-style": ["error", "always" ],
        "arrow-parens": ["error", "always" ],
        "arrow-spacing": ["error"],
        "constructor-super": ["error"],
        "generator-star-spacing": ["error", { "before": false, "after": true }],
        "no-class-assign": ["error"],
        "no-dupe-class-members": ["error"],
        "no-duplicate-imports": ["error"],
        "no-new-symbol": ["error"],
        "no-const-assign": ["error"],
        "no-useless-computed-key": ["error"],
        "no-useless-constructor": ["error"],
        "no-useless-rename": ["error"],
        "no-var": ["error"],
        "prefer-const": ["error"],
        "sort-imports": ["error"]
    }
}

